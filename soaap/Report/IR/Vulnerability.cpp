#include "Report/IR/Vulnerability.h"

using namespace soaap;

void Vulnerability::render(Renderer* r) {
  r->visit(this);
}

void Vulnerability::addToGlobals(GlobalVariable* g, vector<VariableRight>& rights) {
  globals[g] = rights;
}

void Vulnerability::addToPrivates(Value* v, VariableType type) {
  privates[v] = type;
}

void Vulnerability::setCapabilities(ValueFunctionSetMap& caps) {
  capabilities = caps;
}

void Vulnerability::setCallgates(FunctionVector& cgates) {
  callgates = cgates;
}

void Vulnerability::setStack(InstTrace& callStack) {
  for (Instruction* I : callStack) {
    stack.push_back(SourceLocation(I));
  }
}
