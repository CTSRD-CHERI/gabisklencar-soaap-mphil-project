#ifndef SOAAP_ANALYSIS_PASTVULNERABILITYANALYSIS_H
#define SOAAP_ANALYSIS_PASTVULNERABILITYANALYSIS_H

#include "Analysis/Analysis.h"

namespace soaap {

  class VulnerabilityAnalysis : public Analysis {
    public:
      VulnerabilityAnalysis(FunctionSet& privFuncs, StringVector& vulnVendors) : 
        privilegedFuncs(privFuncs), vulnerableVendors(vulnVendors) { }
      virtual void doAnalysis(Module& M, SandboxVector& sandboxes);
    
    private:
      FunctionSet privilegedFuncs;
      SmallVector<CallInst*,16> pastVulnAnnotatedPoints;
      FunctionVector pastVulnAnnotatedFuncs;
      FunctionSet vulnerableFuncs;
      map<Function*,StringSet> funcToCVEs;
      StringVector vulnerableVendors;
      FunctionVector vulnerableVendorFuncs;
  
      void findPastVulnerabilityAnnotations(Module& M);
      void findVulnerableVendorFuncs(Module& M);
      void checkLeakedRights(Module& M, SandboxVector& sandboxes); 
      string stringifyStringSet(StringSet& strings);
  };

}

#endif
